{"version":3,"sources":["components/ScrollToTop.js","components/Loader.js","App.js","reportWebVitals.js","index.js","utils/commonFunctions.js"],"names":["ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","Loader","className","Navigation","lazy","retry","Home","Project","About","Work","Contact","Footer","App","console","log","Cookies","get","document","body","classList","toggle","pages","pageLink","view","displayName","fallback","map","page","index","exact","path","render","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","fn","retriesLeft","interval","Promise","resolve","reject","catch","error","setTimeout"],"mappings":"8NAGe,SAASA,IACtB,IAAQC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,K,WCCMK,EATA,WAEb,OACE,qBAAKC,UAAU,iBAAf,SACE,yCCCAC,EAAaC,gBAAK,kBAAMC,aAAM,kBAAM,oCACpCC,EAAOF,gBAAK,kBAAMC,aAAM,kBAAM,yDAC9BE,EAAUH,gBAAK,kBAAMC,aAAM,kBAAM,yDACjCG,EAAQJ,gBAAK,kBAAMC,aAAM,kBAAM,yDAC/BI,EAAOL,gBAAK,kBAAMC,aAAM,kBAAM,yDAC9BK,EAAUN,gBAAK,kBAAMC,aAAM,kBAAM,mCACjCM,EAASP,gBAAK,kBAAMC,aAAM,kBAAM,oCA+DvBO,EA7DH,WAEVC,QAAQC,IAAI,kCAA8B,0FAGT,UADjB,IAAIC,KACRC,IAAI,cACdC,SAASC,KAAKC,UAAUC,OAAO,QAGjC,IAAMC,EAAQ,CACZ,CACEC,SAAU,IACVC,KAAMjB,EACNkB,YAAa,QAEf,CACEF,SAAU,SACVC,KAAMf,EACNgB,YAAa,SAEf,CACEF,SAAU,QACVC,KAAMd,EACNe,YAAa,QAEf,CACEF,SAAU,WACVC,KAAMb,EACNc,YAAa,WAEf,CACEF,SAAU,kBACVC,KAAMhB,EACNiB,YAAa,SAIjB,OACE,eAAC,IAAD,WACE,cAAC7B,EAAD,IACA,eAAC,WAAD,CAAU8B,SAAU,cAAC,EAAD,IAApB,UACE,cAACtB,EAAD,IACA,eAAC,IAAD,WACGkB,EAAMK,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAMH,EAAKL,SACXS,OAAQ,kBAAM,cAACJ,EAAKJ,KAAN,MACTK,MAIX,cAAC,IAAD,CAAUI,GAAG,SAEf,cAACrB,EAAD,WC1DOsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASX,OACL,cAAC,EAAD,IACFd,SAAS0B,eAAe,SAM1BV,K,+BCdO,SAAS5B,EAAMuC,GAAuC,IAAnCC,EAAkC,uDAApB,EAAGC,EAAiB,uDAAN,IACpD,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BL,IACGR,KAAKY,GACLE,OAAM,SAACC,GACNC,YAAW,WACW,IAAhBP,EAOJxC,EAAMuC,EAAIC,EAAc,EAAGC,GAAUV,KAAKY,EAASC,GALjDA,EAAOE,KAMRL,SAdX,oC","file":"static/js/main.9c14a704.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\r\n\r\nconst Loader = () => {\r\n\r\n  return (\r\n    <div className=\"loadingSection\">\r\n      <h1>Hit.</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import './App.scss';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { retry } from './utils/commonFunctions';\r\nimport Cookies from 'universal-cookie';\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport Loader from './components/Loader';\r\nconst Navigation = lazy(() => retry(() => import('./components/Navigation')));\r\nconst Home = lazy(() => retry(() => import('./components/Home')));\r\nconst Project = lazy(() => retry(() => import('./components/Work/index')));\r\nconst About = lazy(() => retry(() => import('./components/About')));\r\nconst Work = lazy(() => retry(() => import('./components/Work')));\r\nconst Contact = lazy(() => retry(() => import('./components/Contact')));\r\nconst Footer = lazy(() => retry(() => import('./components/Footer')));\r\n\r\nconst App = () => {\r\n\r\n  console.log('%cMade with ‚ù§ by Hit Patel', 'color: black; background: grey; font-size: 15px; padding: 5px 15px; border-radius: 6px');\r\n\r\n  const cookies = new Cookies();\r\n  if (cookies.get('DARK_MODE') === 'true') {\r\n    document.body.classList.toggle('dark');\r\n  }\r\n\r\n  const pages = [\r\n    {\r\n      pageLink: '/',\r\n      view: Home,\r\n      displayName: 'Home'\r\n    },\r\n    {\r\n      pageLink: '/about',\r\n      view: About,\r\n      displayName: 'About'\r\n    },\r\n    {\r\n      pageLink: '/work',\r\n      view: Work,\r\n      displayName: 'Work'\r\n    },\r\n    {\r\n      pageLink: '/contact',\r\n      view: Contact,\r\n      displayName: 'Contact'\r\n    },\r\n    {\r\n      pageLink: '/work/:workCode',\r\n      view: Project,\r\n      displayName: 'Work'\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Router>\r\n      <ScrollToTop />\r\n      <Suspense fallback={<Loader />}>\r\n        <Navigation />\r\n        <Switch>\r\n          {pages.map((page, index) => {\r\n            return (\r\n              <Route\r\n                exact\r\n                path={page.pageLink}\r\n                render={() => <page.view />}\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n          <Redirect to='/' />\r\n        </Switch>\r\n        <Footer />\r\n      </Suspense>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export function retry(fn, retriesLeft = 5, interval = 1000) {\r\n  return new Promise((resolve, reject) => {\r\n    fn()\r\n      .then(resolve)\r\n      .catch((error) => {\r\n        setTimeout(() => {\r\n          if (retriesLeft === 1) {\r\n            // reject('maximum retries exceeded');\r\n            reject(error);\r\n            return;\r\n          }\r\n\r\n          // Passing on \"reject\" is the important part\r\n          retry(fn, retriesLeft - 1, interval).then(resolve, reject);\r\n        }, interval);\r\n      });\r\n  });\r\n}"],"sourceRoot":""}